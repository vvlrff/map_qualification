version: "3.9"

services:
  db:
    image: postgres:15
    env_file:
      - .env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  rabbit:
    image: rabbitmq:3-management
    expose:
      - 5672
    ports:
      - "15673:15672"
      - "5672:5672"
    networks:
      - my-network

  mongo:
    image: mongo:latest
    expose:
      - 27017
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=examplepassword
    networks:
      - my-network

  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: examplepassword
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - my-network

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env.dev
    ports:
      - "8080:80"
    volumes:
      - pgadmin_sessions:/var/lib/pgadmin
      - pgadmin_data:/pgadmin
    depends_on:
      - db
    networks:
      - my-network

  alembic:
    build:
      context: .
      dockerfile: alembic/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      - db
    command: alembic upgrade head
    networks:
      - my-network

  node01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: node01
    environment:
      - node.name=node01
      - cluster.name=es-cluster-7
      - discovery.seed_hosts=node01,node02
      - cluster.initial_master_nodes=node01,node02
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - bootstrap.system_call_filter=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data01:/usr/share/elasticsearch/data
      - ./sysctl-custom.conf:/etc/sysctl.d/sysctl-custom.conf
    networks:
      - my-network

  node02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: node02
    environment:
      - node.name=node02
      - cluster.name=es-cluster-7
      - discovery.seed_hosts=node01,node02
      - cluster.initial_master_nodes=node01,node02
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - bootstrap.system_call_filter=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data02:/usr/share/elasticsearch/data
      - ./sysctl-custom.conf:/etc/sysctl.d/sysctl-custom.conf
    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    environment:
      ELASTICSEARCH_HOSTS: '["http://node01:9200","http://node02:9200"]'
      xpack.monitoring.ui.container.elasticsearch.enabled: true
    ports:
      - 5601:5601
    networks:
      - my-network
    depends_on:
      - node01
      - node02

  parser:
    build:
      context: .
      dockerfile: parser/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      - mongo
      - db
    command: python3 /app/parser/collect.py
    networks:
      - my-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    expose:
      - 8000
    ports:
    - "8000:8000"
    env_file:
      - .env.dev
    depends_on:
      - db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
      - my-network

volumes:
  postgres_data:
  mongo-data:
  pgadmin_data:
  pgadmin_sessions:
  es-data01:
    driver: local
  es-data02:
    driver: local


networks:
  my-network:
    driver: bridge
